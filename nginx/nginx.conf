server {
    listen 80;
    server_name localhost your-dns-name.com; # should be replaced with the actual domain when deployed

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name localhost your-dns-name.com; # Replace with your actual domain

    # SSL Configuration
    # Paths to certificates are as they appear inside the Nginx container
    ssl_certificate /etc/nginx/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;


    # Frontend - React App
    location / {
        proxy_pass http://frontend; # Service name from docker-compose.yml
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Weather API Service
    location /api {
        proxy_pass http://weather-api:3000; # Service name and internal port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # To remove /api prefix before forwarding to the backend:
        rewrite ^/api/(.*)$ /$1 break;
    }

    # Historical Data Service
    location /history {
        proxy_pass http://historical-data:5000; # Service name and internal port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # To remove /history prefix before forwarding to the backend:
        rewrite ^/history/(.*)$ /$1 break;
    }
}
